description "Celery Management Worker"

start on runlevel [2345]
stop on runlevel [016]

kill timeout 60
respawn
respawn limit 10 5

setuid USERSTRING
setgid USERSTRING

env BROKER_URL="amqp://guest:guest@IPSTRING:5672//"
env MANAGEMENT_USER="USERSTRING"
env MANAGER_REST_PORT="{{ config_templates.__params_init.rest_internal_port }}"
env MANAGEMENT_IP="IPSTRING"
env CELERY_WORK_DIR="{{ config_templates.params_init.work_dir }}/work"
env IS_MANAGEMENT_NODE="True"
env AGENT_IP="cloudify.management"
env VIRTUALENV="{{ config_templates.params_init.work_dir }}/env"
env MANAGER_FILE_SERVER_URL="http://IPSTRING:{{ config_templates.params_init.file_server_port }}"
env MANAGER_FILE_SERVER_BLUEPRINTS_ROOT_URL="http://IPSTRING:{{ config_templates.params_init.file_server_port }}/blueprints"
env CELERY_TASK_SERIALIZER="json"
env CELERY_RESULT_SERIALIZER="json"
env CELERY_RESULT_BACKEND="amqp://"
env RIEMANN_CONFIGS_DIR="{{ config_templates.params_init.work_dir }}/riemann"
env C_FORCE_ROOT="true"

exec {{ config_templates.params_init.work_dir }}/env/bin/celery worker \
-Ofair \
--include=cloudify_system_workflows.deployment_environment,plugin_installer.tasks,worker_installer.tasks,riemann_controller.tasks,cloudify.plugins.workflows \
--broker=amqp:// \
--hostname=cloudify.management \
--events \
--app=cloudify \
--loglevel=debug \
-Q cloudify.management \
--logfile={{ config_templates.params_init.work_dir }}/work/cloudify.management_worker%I.log \
--pidfile={{ config_templates.params_init.work_dir }}/work/cloudify.management_worker.pid \
--autoscale={{ config_templates.params_init.workers_autoscale }} \
--maxtasksperchild=10 \
--without-gossip \
--without-mingle
